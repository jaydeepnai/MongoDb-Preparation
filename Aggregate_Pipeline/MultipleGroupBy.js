db.sales.insertMany([
    {
        "storeLocation": "New York",
        "productCategory": "Electronics",
        "saleDate": ISODate("2023-04-25"),
        "amount": 299.99
    },
    {
        "storeLocation": "New York",
        "productCategory": "Clothing",
        "saleDate": ISODate("2023-05-15"),
        "amount": 89.99
    },
    {
        "storeLocation": "Los Angeles",
        "productCategory": "Electronics",
        "saleDate": ISODate("2023-05-20"),
        "amount": 349.99
    },
    {
        "storeLocation": "Los Angeles",
        "productCategory": "Clothing",
        "saleDate": ISODate("2023-06-01"),
        "amount": 120.00
    },
    {
        "storeLocation": "Chicago",
        "productCategory": "Electronics",
        "saleDate": ISODate("2023-05-25"),
        "amount": 179.99
    },
    {
        "storeLocation": "Chicago",
        "productCategory": "Clothing", "saleDate": ISODate("2023-06-05"), "amount": 99.95
    },
    {
        "storeLocation": "Houston",
        "productCategory": "Electronics", "saleDate": ISODate("2023-06-15"), "amount": 255.50
    },
    {
        "storeLocation": "Houston",
        "productCategory": "Clothing", "saleDate": ISODate("2023-07-04"), "amount": 110.00
    },
    {
        "storeLocation": "Miami",
        "productCategory": "Electronics", "saleDate": ISODate("2023-07-21"), "amount": 500.00
    },
    {
        "storeLocation": "Miami",
        "productCategory": "Clothing", "saleDate": ISODate("2023-08-10"), "amount": 140.75
    },
    {
        "storeLocation": "San Francisco",
        "productCategory": "Electronics", "saleDate": ISODate("2023-08-25"), "amount": 299.00
    },
    {
        "storeLocation": "San Francisco",
        "productCategory": "Clothing",
        "saleDate": ISODate("2023-09-05"),
        "amount": 88.99
    },
])

// Group by store location and product category, calculate total sales and average amount:
db.sales.aggregate(
    [
        {
            $group: {
                _id: {
                    location: "$storeLocation",
                    category: "$productCategory",
                },
                total: { $sum: 1 },
                avgItems: { $avg: "$amount" }
            }
        }
    ]
)
// Group by year and month of sale date, categorize by product category, compute total revenue:
db.employees.aggregate([
    {
        $group: {
            _id: {
                year: { $year: "$saleDate" },
                month: { $month: "$saleDate" },
                category: "$productCategory"
            },
            totol: { $sum: "$amount" }
        }
    }
]);
//Group by year, store location, and product category, count orders:
db.employees.aggregate([
    {
        $group: {
            _id: {
                year: { $year: "$saleDate" },
                location: "$storeLocation",
                productCategory: "$productCategory"
            },
            count: {
                $sum: 1
            }
        }
    }
]);
// Group by store location, product category, compute maximum and minimum sale amounts:
db.employees.aggregate([
    {
        $group: {
            _id: {
                location: "$storeLocation",
                productCategory: "$productCategory"
            },
            max: { $max: "$amount" },
            min: { $min: "$amount" },
        }
    }
]);
// Question: Calculate the maximum sale amount per store location for each year.

db.employees.aggregate([
    {
        $group: {
            _id: {
                location: "$storeLocation",
                year: { $year: "$saleDate" }
            },
            max: { $max: "$amount" },
        }
    },
]);

// Question: What are the total number of items sold per product category in each city?
db.employees.aggregate([
    {
        $group: {
            _id: {
                location: "$storeLocation",
                productCategory: "$productCategory"
            },
            max: { $sum: 1 },
        }
    },
]);
// Question: Find the minimum and maximum sale amounts for each year.
db.employees.aggregate([
    {
        $group: {
            _id: {
                year: { $year: "$saleDate" }
            },
            max: { $max: "$amount" },
            min: { $min: "$amount" },
        }
    },
]);
// Question: How many sales were made each month, sorted by month and year?
db.employees.aggregate([
    {
        $group: {
            _id: {
                months: { $month: "$saleDate" }
            },
            count: { $sum: 1 },
        }
    },
]);

// Question: What is the total revenue generated by each product category in the last quarter of the year?
db.employees.aggregate([
    {
        $match: {
            saleDate: {
                $gt: ISODate("2023-09-01"),
                $lt: ISODate("2023-12-31")
            }
        }
    },
    {
        $group: {
            _id: "$productCategory",
            count: { $sum: "$amount" },
        }
    }
]);